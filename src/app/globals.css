@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@200&display=swap');

:root {
  --danger: #dc3545;
}

html {
  scroll-behavior: smooth;
}

body {
  overflow-x: hidden;
  cursor: url('/assets/cursor.png'), auto;
  transition: all 0.5s ease-in-out;
}

body::view-transition-old(root),
body ::view-transition-new(root) {
  animation: none;
  mix-blend-mode: normal;
}

body::-webkit-scrollbar {
  width: 8px;
}
body::-webkit-scrollbar-thumb {
  background-color: var(--danger);
  border-radius: 20px;
}

.custom_thumb::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
.custom_thumb::-webkit-scrollbar-thumb {
  background-color: var(--danger);
  border-radius: 20px;
}

.hero {
  display: flex;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  flex-direction: column;
  align-items: flex-start;
  min-height: 100vh;
  height: 100vh;
}

.hero .h-lg {
  font-size: clamp(40px, 8vw, 80px);
  color: var(--gray-name);
}

.hero h3 .h-lg {
  margin: 5px 0;
  color: var(--gray-title);
}
abbr {
  font-size: clamp(40px, 8vw, 80px);
  margin: 5px 0;
  color: var(--danger) !important;
  transition: ease-in-out 0.4s;
}
abbr:hover {
  font-size: clamp(40px, 8vw, 80px);
  margin: 5px 0;
  color: var(--danger) !important;
  opacity: 0.9;
  scale: 1.1;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Individual link animation */
.animate-link {
  animation-name: linkAnimation;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes linkAnimation {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Header styles and animation */
.slid-left {
  opacity: 0;
  animation: slid-left 0.8s ease-in-out forwards;
  animation-delay: 1.1s;
}
.slid-left span {
  opacity: 0;
  animation: revealAfter 0.8s ease-in-out forwards;
}
.slid-left span:first-child {
  animation-delay: 1.9s;
}
.slid-left span:last-child {
  animation-delay: 2s;
}

@keyframes revealAfter {
  from {
    opacity: 0;
    scale: 1.5;
  }
  to {
    scale: 1;
    opacity: 1;
  }
}

@keyframes slid-left {
  0% {
    opacity: 0;
    transform: translateX(-50px);
  }
  50% {
    opacity: 0.5;
    transform: translateX(150px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.animatedBg {
  position: fixed;
  width: 100%;
  height: 100vh;
  filter: blur(20px);

  z-index: -2;
  clip-path: circle(0% at 50% 50%);
  transition: 1.2s ease-in-out;
}
